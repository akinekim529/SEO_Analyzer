[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ultimate-seo-analyzer"
version = "1.0.0"
authors = [
    {name = "Ultimate SEO Analyzer Team", email = "contact@ultimate-seo-analyzer.com"},
]
description = "The most comprehensive free and open-source SEO analysis tool"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Topic :: Internet :: WWW/HTTP :: Indexing/Search",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Natural Language :: English",
]
keywords = [
    "seo",
    "analysis",
    "website",
    "optimization",
    "search-engine",
    "ai",
    "openai",
    "competitor-analysis",
    "sitemap",
    "web-scraping",
    "performance",
    "accessibility",
    "security",
    "content-analysis",
    "technical-seo",
    "aeo",
    "geo",
    "voice-search",
    "featured-snippets",
]
dependencies = [
    "requests>=2.28.0",
    "beautifulsoup4>=4.11.0",
    "openai>=1.0.0",
    "python-dotenv>=0.19.0",
    "textstat>=0.7.0",
    "nltk>=3.8",
    "selenium>=4.15.0",
    "Pillow>=10.0.0",
    "matplotlib>=3.7.0",
    "plotly>=5.17.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "wordcloud>=1.9.0",
    "pyspellchecker>=0.7.0",
    "readability>=0.3.1",
    "langdetect>=1.0.9",
    "whois>=0.9.27",
    "dnspython>=2.4.0",
    "psutil>=5.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/ultimate-seo-analyzer"
Documentation = "https://github.com/yourusername/ultimate-seo-analyzer/blob/main/USAGE.md"
Repository = "https://github.com/yourusername/ultimate-seo-analyzer.git"
"Bug Reports" = "https://github.com/yourusername/ultimate-seo-analyzer/issues"
Changelog = "https://github.com/yourusername/ultimate-seo-analyzer/blob/main/CHANGELOG.md"

[project.scripts]
ultimate-seo-analyzer = "ultimate_seo_analyzer:main"
seo-analyzer = "seo_analyzer:main"
bulk-seo-analyzer = "bulk_analyzer:main"
competitor-analyzer = "competitor_analyzer:main"
sitemap-generator = "sitemap_generator:main"

[tool.setuptools]
packages = ["ultimate_seo_analyzer"]
include-package-data = true

[tool.setuptools.package-data]
"*" = ["*.md", "*.txt", "*.yml", "*.yaml"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["ultimate_seo_analyzer"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["ultimate_seo_analyzer"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]